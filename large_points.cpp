/* 在一个平面上，如果有两个点(x,y),(a,b),如果说(x,y)支配了(a,b)，这是指x>=a,y>=b;
用图形来看就是(a,b)坐落在以(x,y)为右上角的一个无限的区域内。
给定n个点的集合，一定存在若干个点，它们不会被集合中的任何一点所支配，这些点叫做极大值点。
编程找出所有的极大点，按照x坐标由小到大，输出极大点的坐标。
本题规定：n不超过100，并且不考虑点的坐标为负数的情况。

输入
输入包括两行，第一行是正整数n，表示是点数，第二行包含n个点的坐标，坐标值都是整数，坐标范围从0到100，输入数据中不存在坐标相同的点。

输出
按x轴坐标最小到大的顺序输出所有极大点。
输出格式为:(x1,y1),(x2,y2),...(xk,yk)

注意：输出的每个点之间有","分隔,最后一个点之后没有",",少输出和多输出都会被判错
*/
#include <iostream>
using namespace std;

int main() {
	int n;
	cin >> n;

	int d[n][2];
	for (int i = 0; i < n; i++) 
		cin >> d[i][0] >> d[i][1];  //存储点坐标

	int x[n][2];
	int k = 0;
	for (int i = 0; i < n; i++) {
		bool check = true;
		for (int j = 0; j < n; j++) {
			if (i == j) {
				continue;
			} else {
				if (d[i][0] <= d[j][0] && d[i][1] <= d[j][1]) {
					check = false;
					break;
				} //找出极大值点
			}
		}

		if (check) {
			x[k][0] = d[i][0];
			x[k][1] = d[i][1];
			k++;
		} //将极大值点放入数组x中
	}

	k--;

	for (int i = 0; i < k; i++) {  //给x排序，按照x轴坐标升序
		for (int j = 1; j < k - i + 1; j++) {
			if (x[j][0] < x[j - 1][0]) {
				int tmp0 = x[j][0];
				x[j][0] = x[j - 1][0];
				x[j - 1][0] = tmp0;

				int tmp1 = x[j][1];
				x[j][1] = x[j - 1][1];
				x[j - 1][1] = tmp1;
			}
		}
	}

	cout << '(' << x[0][0] << ',' << x[0][1] << ')';
	for (int i = 1; i <= k; i++) {
		cout <<',' << '(' << x[i][0] << ',' << x[i][1] << ')';
	}

	return 0;
}